{"version":3,"sources":["webpack:///./src/components/Post/index.jsx","webpack:///./src/components/TagTemplateDetails/index.jsx","webpack:///./src/templates/tag-template.jsx"],"names":["Post","render","this","props","data","node","frontmatter","title","date","category","description","fields","slug","categorySlug","className","dateTime","moment","format","key","to","dangerouslySetInnerHTML","__html","React","Component","TagTemplateDetails","items","tagTitle","tag","posts","forEach","post","push","TagTemplate","site","siteMetadata","pathContext","Sidebar","allMarkdownRemark","edges","pageQuery"],"mappings":"+KAKMA,E,gLACJC,OAAA,WAAU,IAAD,EACwCC,KAAKC,MAAMC,KAAKC,KAAKC,YAA5DC,EADD,EACCA,MAAOC,EADR,EACQA,KAAMC,EADd,EACcA,SAAUC,EADxB,EACwBA,YADxB,EAEwBR,KAAKC,MAAMC,KAAKC,KAAKM,OAA5CC,EAFD,EAECA,KAAMC,EAFP,EAEOA,aAEd,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,0BAAMA,UAAU,kBAAkBC,SAAUC,IAAOR,GAAMS,OAAO,eAC7DD,IAAOR,GAAMS,OAAO,eAEvB,0BAAMH,UAAU,uBAChB,0BAAMA,UAAU,sBAAsBI,IAAKL,GACzC,kBAAC,IAAD,CAAMM,GAAIN,EAAcC,UAAU,4BAC/BL,KAIP,wBAAIK,UAAU,eACZ,kBAAC,IAAD,CAAMA,UAAU,mBAAmBK,GAAIP,GAAOL,IAGhD,uBAAGO,UAAU,oBAAoBM,wBAA0B,CAACC,OAAQX,KACpE,kBAAC,IAAD,CAAMI,UAAU,iBAAiBK,GAAIP,GAArC,U,GAvBWU,IAAMC,WA6BVvB,O,mHCLAwB,E,gLAzBbvB,OAAA,WACE,IAAMwB,EAAQ,GACRC,EAAWxB,KAAKC,MAAMwB,IAM5B,OALczB,KAAKC,MAAMyB,MACnBC,SAAQ,SAACC,GACbL,EAAMM,KAAK,kBAAC/B,EAAA,EAAD,CAAMI,KAAM0B,EAAMZ,IAAKY,EAAKzB,KAAKM,OAAOC,WAInD,yBAAKE,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,eAAd,wBAC6BY,EAD7B,KAGA,yBAAKZ,UAAU,cACZW,O,GAjBkBH,IAAMC,W,8CCEjCS,E,gLACJ/B,OAAA,WAAU,IACAM,EAAUL,KAAKC,MAAMC,KAAK6B,KAAKC,aAA/B3B,MACAoB,EAAQzB,KAAKC,MAAMgC,YAAnBR,IAER,OACE,6BACE,kBAAC,IAAD,CAAQpB,MAAK,wBAA0BoB,EAA1B,OAAoCpB,IACjD,kBAAC6B,EAAA,EAAD,CAASF,aAAchC,KAAKC,MAAMC,KAAK6B,KAAKC,eAC5C,kBAAC,EAAD,CAAoBN,MAAO1B,KAAKC,MAAMC,KAAKiC,kBAAkBC,MAAOX,IAAKA,M,GATvDL,IAAMC,WAiBnBgB,GAFEP,YAEO","file":"component---src-templates-tag-template-jsx-66ae31fb5ef6a8d474a9.js","sourcesContent":["import React from 'react';\nimport Link from 'gatsby-link';\nimport moment from 'moment';\nimport './style.scss';\n\nclass Post extends React.Component {\n  render() {\n    const { title, date, category, description } = this.props.data.node.frontmatter;\n    const { slug, categorySlug } = this.props.data.node.fields;\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time className=\"post__meta-time\" dateTime={moment(date).format('YYYY.MM.DD')}>\n            {moment(date).format('YYYY.MM.DD')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>{title}</Link>\n        </h2>\n        {/* <p className=\"post__description\">{description}</p> */}\n        <p className=\"post__description\" dangerouslySetInnerHTML={ {__html: description} }></p>\n        <Link className=\"post__readmore\" to={slug}>Read</Link>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post';\n\nclass TagTemplateDetails extends React.Component {\n  render() {\n    const items = [];\n    const tagTitle = this.props.tag;\n    const posts = this.props.posts;\n    posts.forEach((post) => {\n      items.push(<Post data={post} key={post.node.fields.slug} />);\n    });\n\n    return (\n      <div className=\"content\">\n        <div className=\"content__inner\">\n          <div className=\"page\">\n            <h1 className=\"page__title\">\n              All Posts tagged as &quot;{tagTitle}&quot;\n            </h1>\n            <div className=\"page__body\">\n              {items}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TagTemplateDetails;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport Sidebar from '../components/Sidebar';\nimport TagTemplateDetails from '../components/TagTemplateDetails';\n\nclass TagTemplate extends React.Component {\n  render() {\n    const { title } = this.props.data.site.siteMetadata;\n    const { tag } = this.props.pathContext;\n\n    return (\n      <div>\n        <Helmet title={`All Posts tagged as \"${tag}\" - ${title}`} />\n        <Sidebar siteMetadata={this.props.data.site.siteMetadata} />\n        <TagTemplateDetails posts={this.props.data.allMarkdownRemark.edges} tag={tag} />\n      </div>\n    );\n  }\n}\n\nexport default TagTemplate;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          rss\n          vk,\n          steemit\n        }\n      }\n    }\n    allMarkdownRemark(\n        limit: 1000,\n        filter: { frontmatter: { tags: { in: [$tag] }, layout: { eq: \"post\" }, draft: { ne: true } } },\n        sort: { order: DESC, fields: [frontmatter___date] }\n      ){\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}