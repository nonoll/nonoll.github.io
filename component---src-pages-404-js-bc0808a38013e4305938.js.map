{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","document","script","createElement","src","body","appendChild","window","adsbygoogle","push","google_ad_client","enable_page_level_ads","Layout","children","data","site","siteMetadata","title","paddingTop","Sidebar","Date","getFullYear","href","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","googleSiteVerification","property","author","concat","NotFoundPage"],"mappings":"ijBAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAM,QACNC,eAAe,SAGhBT,OAWXD,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UC1Bf,GAAwB,oBAAbY,SAA0B,CACnC,IAAMC,EAASD,SAASE,cAAc,UACtCD,EAAOE,IAAM,iEACbH,SAASI,KAAKC,YAAYJ,IAEzBK,OAAOC,YAAcD,OAAOC,aAAe,IAAIC,KAAK,CACnDC,iBAAkB,0BAClBC,uBAAuB,IA0DZC,IAtDA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OA0BV,OACE,oCACE,kBAAC,EAAD,CAAQxB,UAAWwB,EAAKC,KAAKC,aAAaC,QAC1C,yBACE1B,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBACRsB,WAAY,IAGd,kBAACC,EAAA,EAAD,CAASH,aAAcF,EAAKC,KAAKC,eACjC,8BAAOH,GACP,sCACK,IAAIO,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,e,+RCzDV,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMT,EAAS,EAATA,MAC9BF,EADuC,OACvCA,KAcFY,EAAkBH,GAAeT,EAAKC,aAAaQ,YAEzD,OACE,kBAAC,IAAD,CACEI,eAAgB,CACdH,QAEFR,MAAOA,EACPY,cAAa,QAAUd,EAAKC,aAAaC,MACzCS,KAAM,CACJ,CACEI,KAAM,2BACNC,QAAShB,EAAKC,aAAagB,wBAA0B,IAEvD,CACEF,KAAK,cACLC,QAASJ,GAEX,CACEM,SAAS,WACTF,QAASd,GAEX,CACEgB,SAAS,iBACTF,QAASJ,GAEX,CACEM,SAAS,UACTF,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAAShB,EAAKC,aAAakB,QAE7B,CACEJ,KAAK,gBACLC,QAASd,GAEX,CACEa,KAAK,sBACLC,QAASJ,IAEXQ,OAAOT,KAKfH,EAAIvB,aAAe,CACjByB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,kCC3Ff,wDAaea,UARM,kBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKnB,MAAM,mBACX,yCACA","file":"component---src-pages-404-js-bc0808a38013e4305938.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Sidebar from '../components/Sidebar';\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nif (typeof document !== 'undefined') {\n  const script = document.createElement('script');\n  script.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js';\n  document.body.appendChild(script);\n  \n  (window.adsbygoogle = window.adsbygoogle || []).push({\n    google_ad_client: \"ca-pub-6583782974868046\",\n    enable_page_level_ads: true\n  });\n}\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteLayoutQuery {\n      site {\n        siteMetadata {\n          title\n          subtitle\n          copyright\n          menu {\n            label\n            path\n          }\n          author {\n            name\n            email\n            telegram\n            twitter\n            github\n            rss\n            vk,\n            steemit\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <Sidebar siteMetadata={data.site.siteMetadata} />\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            googleSiteVerification\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'google-site-verification',\n          content: site.siteMetadata.googleSiteVerification || ''\n        },\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}